# Default values for moderation-service
replicaCount: 3

image:
  repository: moderation-service
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1001

securityContext:
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  runAsUser: 1001
  readOnlyRootFilesystem: false
  capabilities:
    drop:
    - ALL

service:
  type: ClusterIP
  port: 80
  targetPort: 3000

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: moderation.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - moderation-service
        topologyKey: kubernetes.io/hostname

# Environment variables
env:
  - name: NODE_ENV
    value: "production"
  - name: PORT
    value: "3000"

# Secrets configuration
secrets:
  openai:
    enabled: true
    secretName: "openai-api-secret"
    key: "api-key"
  aws:
    enabled: true
    secretName: "aws-credentials-secret"
    accessKeyId: "access-key-id"
    secretAccessKey: "secret-access-key"

# Health check configuration
healthCheck:
  enabled: true
  path: "/health"
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

# Service monitor for Prometheus (optional)
serviceMonitor:
  enabled: false
  interval: 30s
  path: /metrics